BiocManager::install("Glimma")
library(limma)
library(Glimma)
library(edgeR)
library(Mus.musculus)
load("final.Rdata")


# 通过EdgeR过滤数据： http://www.senlinstudy.xyz/?p=832


# 分组
group= c(rep(c("ctrl","trt"),6))
lane=c(rep(1:6,each=2)) ##批次分组
## 把matrix转换呈就用EdgeR data
y <- DGEList(counts=dat6,group=group)
## 添加另外的分组信息
levels(lane)=unique(lane)
y$samples$lane=lane


# 归一化和标准化
## 如果是counts，就用EdgeR 转换数据，calcNormFactors具有标准化和归一化的作用
## 解释calcNormFactors： https://www.jianshu.com/p/9ae0865d3bc8
## 解释calcNormFactors出来的数据在$norm.factors中，显示的的scale的比例
x2 <- calcNormFactors(y, method = "TMM")  


# 聚类分析检验
## 批次上色
col.lane <- lane
levels(col.lane) <-  brewer.pal(length(unique(col.lane)), "Set2")
## limma自带的PCA
plotMDS(y, col=col.lane,labels=group, dim=c(3,4)) # 查看PCA 前2维度
title(main="A. Sample groups")

if(F){
## 聚类
hc=hclust(dist(t(exp)))
par(mar=c(5,5,5,10)) 
plot(as.dendrogram(hc), nodePar = nodePar,  horiz = TRUE)
## PCA
library(ggfortify)
df=as.data.frame(t(exp))
df$group=group_list 
autoplot(prcomp( df[,1:(ncol(df)-1)] ), data=df,colour = 'group')
}

## 网页可视化
glMDSPlot(y, labels=paste(group, lane, sep="_"), 
          groups=y$samples[c(1,4)], launch=FALSE)

# 差异分析
## ~0 代表没有+后面第一个factor的截距，形成一个列表
## 如何理解：https://treeh.cn/?id=21
## 如何理解：https://shixiangwang.github.io/home/cn/post/2020-10-29-what-has-been-done-when-use-limma/
design <- model.matrix(~0+group)
colnames(design)=levels(factor(group))
rownames(design)=colnames(dat6)
## 建立对比关系
contrast.matrix<-makeContrasts(ctrlvstrt=ctrl - trt,levels = design)


# voom limma自带的标准化工具，对原始counts可以用这种方法
# https://www.jieandze1314.com/post/cnposts/90/
v <- voom(dat6, design, plot=TRUE)

# 线性回归

vfit <- lmFit(dat6, design)
vfit1 <- contrasts.fit(vfit, contrasts=contrast.matrix)

## 贝叶斯算法：http://rvdsd.top/2019/08/19/Data%20Analysis%20for%20the%20life%20sciences/DALS019_StatisticalModels2_Beyes_Hierarchical/
## 贝叶斯算法：https://www.jianshu.com/p/1cfffa115c08
### 就是把每个基因的方差趋同于整个基因的趋势
efit <- eBayes(vfit)
efit1 <- eBayes(vfit1)

# coef是取makeContrasts中第几个比较
tempOutput1 = topTable(efit, coef=1, n=Inf)
tempOutput2 = topTable(efit1, n=Inf)

