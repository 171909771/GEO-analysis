
# http://www.4k8k.xyz/article/leianuo123/111800603
# http://www.360doc.com/content/20/0202/12/42030643_889214005.shtml
# https://zhuanlan.zhihu.com/p/344426350

# http://www.bio-info-trainee.com/1399.html
## 查找芯片注释信息
# 注释
library("rat2302.db")
ls("package:rat2302.db")
ids=toTable(rat2302SYMBOL)
dat1=read.delim("GSE97537_series_matrix.txt.gz",comment.char = "!",row.names=1)

# remove 多余的基因名
dat1 = dat1[rownames(dat1) %in% ids$probe_id,]
ids=ids[match(rownames(dat1),ids$probe_id),]

# 过滤多余的基因
##########记住如果dat1不是dataframe，一定要把它变成dataframe，不然看不到行名，可以用class查看
tmp = by(dat1,
         ids$symbol,
         function(x) rownames(x)[which.max(rowMeans(x))])  #取最大平均值
probes = as.character(tmp)
dim(dat1)
dat1 = dat1[rownames(dat1) %in% probes,] # 过滤有多个探针的基因
dim(dat1)
rownames(dat1)=ids[match(rownames(dat1),ids$probe_id),2]



# QC
## 分组信息
exp=dat1
group_list=c(rep("control",times=7),rep("treat",times=5))
colnames(exp) = paste(group_list,1:12,sep='')
head(exp)
## 定义nodePar
nodePar <- list(lab.cex = 0.6, pch = c(NA, 19), 
              cex = 0.7, col = "blue")
## 确定是否normalization
library(reshape2)
head(exp)
exp_L = melt(exp)
head(exp_L)
colnames(exp_L)=c('sample','value')
head(exp_L)
exp_L$group = rep(group_list,each=nrow(exp))
library(ggplot2)
ggplot(exp_L,
           aes(x=sample,y=value,fill=group))+geom_boxplot()
## 如果不平
if(F){
  exp = normalizeBetweenArrays(exp)}



## 聚类
hc=hclust(dist(t(exp)))
par(mar=c(5,5,5,10)) 
plot(as.dendrogram(hc), nodePar = nodePar,  horiz = TRUE)
## PCA
library(ggfortify)
df=as.data.frame(t(exp))
df$group=group_list 
autoplot(prcomp( df[,1:(ncol(df)-1)] ), data=df,colour = 'group')


# 差异分析
library(limma)
## 做分组矩阵 
design <- model.matrix(~0+factor(group_list))
colnames(design)=levels(factor(group_list))
rownames(design)=colnames(exp)
contrast.matrix<-makeContrasts(paste0(c("treat","control"),collapse = "-"),levels = design)
## DEGs
fit <- lmFit(exp,design)
##step2
fit2 <- contrasts.fit(fit, contrast.matrix) ##这一步很重要，大家可以自行看看效果
fit3 <- eBayes(fit)  ## default no trend !!!
##eBayes() with trend=TRUE
##step3
tempOutput = topTable(fit3, coef=1, n=Inf)
nrDEG = na.omit(tempOutput) 
nrDEG$genenames=rownames(nrDEG)

sig.gene=subset(nrDEG,adj.P.Val<0.01 & logFC< -0.4)

genename=rownames(sig.gene)
library(writexl)
write_xlsx(sig.gene,"abc.xlsx")
